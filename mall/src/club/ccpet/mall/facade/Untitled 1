1.Facade结尾的是一个接口,需要接口的原因是使用了动态代理.FacadeImpl为实现类.
2.本次设计原则是每一个service层只调用对应的dao,业务需要调用多个service层时,出于解耦的原则,统一在facade层调用.
3.层级关系:
	domain-->dao-->service-->facade-->servlet

4.@AOP注解   用于类的注解，增加此注解后，用工厂生成bean时会自动为该对象增加一个代理对象，该代理对象可以对内部的方法进行注解扫描，
5.@Transaction注解，用于方法注解,若方法上有,则开启事务操作。
